type vendor_lib_camera_metadata, file_type, vendor_file_type;
type vendor_camera_libs, file_type, vendor_file_type;

allow platform_app vendor_hal_soter_hwservice:hwservice_manager find;
binder_call(platform_app, vendor_hal_soter_qti)

# Incremental
get_prop(platform_app, incremental_prop)
# To create files, get permission to fill blocks, and configure Incremental File System
allow platform_app incremental_control_file:file { ioctl r_file_perms };
allowxperm platform_app incremental_control_file:file ioctl {
  INCFS_IOCTL_CREATE_FILE
  INCFS_IOCTL_CREATE_MAPPED_FILE
  INCFS_IOCTL_PERMIT_FILL
  INCFS_IOCTL_GET_READ_TIMEOUTS
  INCFS_IOCTL_SET_READ_TIMEOUTS
  INCFS_IOCTL_GET_LAST_READ_ERROR
};
# To get signature of an APK installed on Incremental File System, and fill in data
# blocks and get the filesystem state
allowxperm platform_app apk_data_file:file ioctl {
  INCFS_IOCTL_READ_SIGNATURE
  INCFS_IOCTL_FILL_BLOCKS
  INCFS_IOCTL_GET_FILLED_BLOCKS
  INCFS_IOCTL_GET_BLOCK_COUNT
  F2FS_IOC_GET_FEATURES
  F2FS_IOC_GET_COMPRESS_BLOCKS
  F2FS_IOC_COMPRESS_FILE
  F2FS_IOC_DECOMPRESS_FILE
  F2FS_IOC_RELEASE_COMPRESS_BLOCKS
  F2FS_IOC_RESERVE_COMPRESS_BLOCKS
  FS_IOC_SETFLAGS
  FS_IOC_GETFLAGS
};

allow platform_app hal_misys_hwservice:hwservice_manager find;
binder_call(platform_app, hal_misys_default)

# Soter service
allow platform_app vendor_hal_soter_hwservice:hwservice_manager find;
binder_call(platform_app, vendor_hal_soter_qti)

allow platform_app adsprpcd_file:file { open read getattr };
allow platform_app app_data_file:file execute;
allow platform_app user_profile_data_file:file read;
allow platform_app vendor_camera_libs:file { getattr open read map execute };
allow platform_app vendor_camera_sensor_prop:file { getattr open read map };
allow platform_app vendor_file:dir watch;
allow platform_app vendor_hal_camerapostproc_xiaomi_hwservice:hwservice_manager find;
allow platform_app vendor_hal_dspmanager_hwservice:hwservice_manager find;
allow platform_app vendor_lib_camera_metadata:file { execute read open getattr };
allow platform_app vendor_qdsp_device:chr_file { open read write ioctl };
allow platform_app vendor_xdsp_device:chr_file { open read write ioctl };
binder_call(platform_app, hal_camera_default);
binder_call(platform_app, vendor_dspservice);
